<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns:st1="urn:schemas-microsoft-com:office:smarttags"
xmlns="http://www.w3.org/TR/REC-html40">
	

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 10">
<meta name=Originator content="Microsoft Word 10">
<link rel=File-List href="TODO_files/filelist.xml">
<link rel=Edit-Time-Data href="TODO_files/editdata.mso">
<!--[if !mso]>
<style>
v\:* {behavior:url(#default#VML);}
o\:* {behavior:url(#default#VML);}
w\:* {behavior:url(#default#VML);}
.shape {behavior:url(#default#VML);}
</style>
<![endif]-->
<title>TODO in EtherYatri.NET</title>
<o:SmartTagType namespaceuri="urn:schemas-microsoft-com:office:smarttags"
 name="PersonName"/>
<o:SmartTagType namespaceuri="urn:schemas-microsoft-com:office:smarttags"
 name="date"/>
<o:SmartTagType namespaceuri="urn:schemas-microsoft-com:office:smarttags"
 name="time"/>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Siddharth Uppal</o:Author>
  <o:Template>Normal</o:Template>
  <o:LastAuthor>Siddharth Uppal</o:LastAuthor>
  <o:Revision>129</o:Revision>
  <o:TotalTime>322</o:TotalTime>
  <o:Created>2003-07-26T08:16:00Z</o:Created>
  <o:LastSaved>2003-08-03T19:27:00Z</o:LastSaved>
  <o:Pages>1</o:Pages>
  <o:Words>2631</o:Words>
  <o:Characters>14997</o:Characters>
  <o:Company>Upster Inc.</o:Company>
  <o:Lines>124</o:Lines>
  <o:Paragraphs>35</o:Paragraphs>
  <o:CharactersWithSpaces>17593</o:CharactersWithSpaces>
  <o:Version>10.3311</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:Compatibility>
   <w:BreakWrappedTables/>
   <w:SnapToGridInCell/>
   <w:WrapTextWithPunct/>
   <w:UseAsianBreakRules/>
  </w:Compatibility>
  <w:BrowserLevel>MicrosoftInternetExplorer4</w:BrowserLevel>
 </w:WordDocument>
</xml><![endif]--><!--[if !mso]><object
 classid="clsid:38481807-CA0E-42D2-BF39-B33AF135CC4D" id=ieooui></object>
<style>
st1\:*{behavior:url(#ieooui) }
</style>
<![endif]-->
<style>
<!--
 /* Font Definitions */
 @font-face
	{font-family:Wingdings;
	panose-1:5 0 0 0 0 0 0 0 0 0;
	mso-font-charset:2;
	mso-generic-font-family:auto;
	mso-font-pitch:variable;
	mso-font-signature:0 268435456 0 0 -2147483648 0;}
@font-face
	{font-family:Verdana;
	panose-1:2 11 6 4 3 5 4 4 2 4;
	mso-font-charset:0;
	mso-generic-font-family:swiss;
	mso-font-pitch:variable;
	mso-font-signature:536871559 0 0 0 415 0;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:"";
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
h1
	{mso-style-next:Normal;
	margin-top:12.0pt;
	margin-right:0in;
	margin-bottom:3.0pt;
	margin-left:0in;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:1;
	font-size:16.0pt;
	font-family:Arial;
	mso-font-kerning:16.0pt;}
h2
	{mso-style-next:Normal;
	margin-top:12.0pt;
	margin-right:0in;
	margin-bottom:3.0pt;
	margin-left:0in;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:2;
	font-size:14.0pt;
	font-family:Arial;
	font-style:italic;}
a:link, span.MsoHyperlink
	{color:blue;
	text-decoration:underline;
	text-underline:single;}
a:visited, span.MsoHyperlinkFollowed
	{color:purple;
	text-decoration:underline;
	text-underline:single;}
p.MsoPlainText, li.MsoPlainText, div.MsoPlainText
	{margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";}
pre
	{margin-top:12.0pt;
	margin-right:0in;
	margin-bottom:12.0pt;
	margin-left:0in;
	mso-pagination:widow-orphan;
	background:#EEEEEE;
	font-size:11.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";}
span.clssubhead1
	{mso-style-name:clssubhead1;
	mso-ansi-font-size:14.0pt;
	mso-bidi-font-size:14.0pt;
	color:navy;
	font-weight:bold;}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 65.95pt 1.0in 65.95pt;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
 /* List Definitions */
 @list l0
	{mso-list-id:2081244198;
	mso-list-type:hybrid;
	mso-list-template-ids:-1851774142 616346574 67698691 67698693 67698689 67698691 67698693 67698689 67698691 67698693;}
@list l0:level1
	{mso-level-start-at:0;
	mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:.5in;
	mso-level-number-position:left;
	text-indent:-.25in;
	font-family:Symbol;
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Courier New";}
@list l0:level2
	{mso-level-number-format:bullet;
	mso-level-text:o;
	mso-level-tab-stop:1.0in;
	mso-level-number-position:left;
	text-indent:-.25in;
	font-family:"Courier New";}
@list l0:level3
	{mso-level-number-format:bullet;
	mso-level-text:\F0A7;
	mso-level-tab-stop:1.5in;
	mso-level-number-position:left;
	text-indent:-.25in;
	font-family:Wingdings;}
@list l0:level4
	{mso-level-tab-stop:2.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l0:level5
	{mso-level-tab-stop:2.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l0:level6
	{mso-level-tab-stop:3.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l0:level7
	{mso-level-tab-stop:3.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l0:level8
	{mso-level-tab-stop:4.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l0:level9
	{mso-level-tab-stop:4.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
ol
	{margin-bottom:0in;}
ul
	{margin-bottom:0in;}
-->
</style>
<!--[if gte mso 10]>
<style>
 /* Style Definitions */
 table.MsoNormalTable
	{mso-style-name:"Table Normal";
	mso-tstyle-rowband-size:0;
	mso-tstyle-colband-size:0;
	mso-style-noshow:yes;
	mso-style-parent:"";
	mso-padding-alt:0in 5.4pt 0in 5.4pt;
	mso-para-margin:0in;
	mso-para-margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman";}
</style>
<![endif]-->
</head>

	

<body lang=EN-US link=blue vlink=purple style='tab-interval:.5in'>

<div class=Section1>

<p class=MsoPlainText align=right style='text-align:right'><span
style='font-size:8.0pt;font-family:Verdana'>Started </span><st1:time Hour="13"
Minute="26"><span style='font-size:8.0pt;font-family:Verdana'>1:26 PM</span></st1:time>
<st1:date Month="5" Day="30" Year="2003"><span style='font-size:8.0pt;
 font-family:Verdana'>5/30/2003</span></st1:date> <span style='font-size:8.0pt;
font-family:Verdana'>by Siddharth Uppal <a
href="mailto:siddharthuppal@yahoo.co.in">siddharthuppal@yahoo.co.in</a><o:p></o:p></span></p>

<p class=MsoPlainText align=right style='text-align:right'><span
style='font-size:8.0pt;font-family:Verdana'><o:p>&nbsp;</o:p></span></p>

<h1><span style='font-size:20.0pt'>TODO in EtherYatri.NET Toolkit<o:p></o:p></span></h1>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<h2>EtherYatri.NET Framework Related</h2>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoPlainText style='margin-left:.5in;text-indent:-.25in;mso-list:l0 level1 lfo2;
tab-stops:list .5in'><![if !supportLists]><span style='font-family:Symbol;
mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol'><span
style='mso-list:Ignore'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span style='font-family:Verdana'>AgentProxy
should record the IP address of the target host. Not every host can be assumed
to be capable of correctly resolving the host name of the target host
containing the referred agent.<o:p></o:p></span></p>

<p class=MsoPlainText style='margin-left:.25in'><span style='font-family:Verdana'><o:p>&nbsp;</o:p></span></p>

<p class=MsoPlainText style='margin-left:.5in;text-indent:-.25in;mso-list:l0 level1 lfo2;
tab-stops:list .5in'><![if !supportLists]><span style='font-family:Symbol;
mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol'><span
style='mso-list:Ignore'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span style='font-family:Verdana'>Transferring
the assemblies containing the classes of the types whose references are held by
the agent. For each of the fields, we must determine the assembly from which
that type was created. If that assembly is not the same as the agent’s
assembly, then that assembly must also be transferred with the agent’s assembly
and saved in the same directory where the code of the agent is saved.<o:p></o:p></span></p>

<p class=MsoPlainText><b style='mso-bidi-font-weight:normal'><span
style='font-family:Verdana'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoPlainText><b style='mso-bidi-font-weight:normal'><span
style='font-family:Verdana'>&lt;snipping&gt;<o:p></o:p></span></b></p>

<p class=MsoPlainText><b style='mso-bidi-font-weight:normal'><span
style='font-family:Verdana'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal><span class=clssubhead1><span style='font-size:9.0pt;
font-family:Verdana'>Resolving References to Assemblies</span></span><span
style='font-size:8.0pt;font-family:Verdana'><br>
<!--[if gte vml 1]><v:shapetype id="_x0000_t75" coordsize="21600,21600" o:spt="75"
 o:preferrelative="t" path="m@4@5l@4@11@9@11@9@5xe" filled="f" stroked="f">
 <v:stroke joinstyle="miter"/>
 <v:formulas>
  <v:f eqn="if lineDrawn pixelLineWidth 0"/>
  <v:f eqn="sum @0 1 0"/>
  <v:f eqn="sum 0 0 @1"/>
  <v:f eqn="prod @2 1 2"/>
  <v:f eqn="prod @3 21600 pixelWidth"/>
  <v:f eqn="prod @3 21600 pixelHeight"/>
  <v:f eqn="sum @0 0 1"/>
  <v:f eqn="prod @6 1 2"/>
  <v:f eqn="prod @7 21600 pixelWidth"/>
  <v:f eqn="sum @8 21600 0"/>
  <v:f eqn="prod @7 21600 pixelHeight"/>
  <v:f eqn="sum @10 21600 0"/>
 </v:formulas>
 <v:path o:extrusionok="f" gradientshapeok="t" o:connecttype="rect"/>
 <o:lock v:ext="edit" aspectratio="t"/>
</v:shapetype><v:shape id="_x0000_i1025" type="#_x0000_t75" alt="" style='width:7.5pt;
 height:3pt'>
 <v:imagedata src="TODO_files/image001.gif" o:href="../../../../../../Desktop/Microsoft%20Interview%20Questions/Microsoft%20_NET%20Implement%20a%20Custom%20Common%20Language%20Runtime%20Host%20for%20Your%20Managed%20App%20--%20MSDN%20Magazine,%20March%202001_files/indent.gif"/>
</v:shape><![endif]--><![if !vml]><img border=0 width=10 height=4
src="TODO_files/image001.gif" v:shapes="_x0000_i1025"><![endif]>The CLR has a
well-defined set of rules for resolving references to assemblies, including
probing in the ApplicationBase and looking in the global assembly cache. These
default rules may not be sufficient in some hosting scenarios, especially if
the host is creating assemblies on the fly using Reflection.Emit. In this case,
there may not be a persisted assembly to find.<br>
<!--[if gte vml 1]><v:shape id="_x0000_i1026" type="#_x0000_t75" alt=""
 style='width:7.5pt;height:3pt'>
 <v:imagedata src="TODO_files/image001.gif" o:href="../../../../../../Desktop/Microsoft%20Interview%20Questions/Microsoft%20_NET%20Implement%20a%20Custom%20Common%20Language%20Runtime%20Host%20for%20Your%20Managed%20App%20--%20MSDN%20Magazine,%20March%202001_files/indent.gif"/>
</v:shape><![endif]--><![if !vml]><img border=0 width=10 height=4
src="TODO_files/image001.gif" v:shapes="_x0000_i1026"><![endif]>The CLR
provides a hook into the class-loading process that allows a host to plug in
its own rules for how assembly references are resolved. This hook is the
TypeResolveEvent on the System.AppDomain class. This event takes a delegate of
type ResolveEventHandler. ResolveEventHandler has the following signature:<o:p></o:p></span></p>

<pre><span style='font-size:7.0pt'>public delegate Assembly ResolveEventHandler(<o:p></o:p></span></pre><pre><span
style='font-size:7.0pt'><span style='mso-spacerun:yes'>   </span>object sender,<o:p></o:p></span></pre><pre><span
style='font-size:7.0pt'><span style='mso-spacerun:yes'>   </span>EventArgs e);<o:p></o:p></span></pre>

<p class=MsoPlainText style='margin-left:.5in'><span style='font-size:8.0pt;
font-family:Verdana'><!--[if gte vml 1]><v:shape id="_x0000_i1027" type="#_x0000_t75"
 alt="" style='width:7.5pt;height:3pt'>
 <v:imagedata src="TODO_files/image001.gif" o:href="../../../../../../Desktop/Microsoft%20Interview%20Questions/Microsoft%20_NET%20Implement%20a%20Custom%20Common%20Language%20Runtime%20Host%20for%20Your%20Managed%20App%20--%20MSDN%20Magazine,%20March%202001_files/indent.gif"/>
</v:shape><![endif]--><![if !vml]><img border=0 width=10 height=4
src="TODO_files/image001.gif" v:shapes="_x0000_i1027"><![endif]>If the CLR does
not find an assembly given its default rules, it raises this event by passing
the identity of the assembly it is looking for as the EventArgs parameter.
Hosts that receive this event are free to resolve the reference to the assembly
by any means they see fit. They may construct an assembly on the fly, find it
in a custom location on disk, and so on, as long as they construct an instance
of System.Reflection.Assembly to return from the delegate. The sample code in <a
href="javascript:OpenUrl('figures.asp#fig8');" target="_self"><b>Figure&nbsp;8</b></a>
demonstrates how a host registers to receive the TypeResolveEvent.</span><span
style='font-family:Verdana'><o:p></o:p></span></p>

<p class=MsoPlainText><b style='mso-bidi-font-weight:normal'><span
style='font-family:Verdana'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoPlainText><b style='mso-bidi-font-weight:normal'><span
style='font-family:Verdana'>&lt;/snipping&gt;<o:p></o:p></span></b></p>

<p class=MsoPlainText><b style='mso-bidi-font-weight:normal'><span
style='font-family:Verdana'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoPlainText style='margin-left:.5in;text-indent:-.25in;mso-list:l0 level1 lfo2;
tab-stops:list .5in'><![if !supportLists]><span style='font-family:Symbol;
mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol'><span
style='mso-list:Ignore'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><b style='mso-bidi-font-weight:normal'><span
style='font-family:Verdana'>Versioning and Code Cache: </span></b><span
style='font-family:Verdana'>for agent’s assembly, for other assemblies from
which the agent loaded some types.<o:p></o:p></span></p>

<p class=MsoPlainText style='margin-left:.25in'><b style='mso-bidi-font-weight:
normal'><span style='font-family:Verdana'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoPlainText style='margin-left:.5in;text-indent:-.25in;mso-list:l0 level1 lfo2;
tab-stops:list .5in'><![if !supportLists]><span style='font-family:Symbol;
mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol'><span
style='mso-list:Ignore'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><b style='mso-bidi-font-weight:normal'><span
style='font-family:Verdana'>When 4 instances of Test.WinAgent were set
executing, the computer became very slow. The CPU utilization of the m/c rose
to 100%, and WINAH.exe started consuming about 97% of CVPU YIMR.D<o:p></o:p></span></b></p>

<p class=MsoPlainText style='margin-left:.25in'><b style='mso-bidi-font-weight:
normal'><span style='font-family:Verdana'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoPlainText style='margin-left:.5in;text-indent:-.25in;mso-list:l0 level1 lfo2;
tab-stops:list .5in'><![if !supportLists]><span style='font-family:Symbol;
mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol'><span
style='mso-list:Ignore'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><b style='mso-bidi-font-weight:normal'><span
style='font-family:Verdana'>Allow an agent to activate or deactivate itself.<o:p></o:p></span></b></p>

<p class=MsoPlainText style='margin-left:.25in'><b style='mso-bidi-font-weight:
normal'><span style='font-family:Verdana'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoPlainText style='margin-left:.5in;text-indent:-.25in;mso-list:l0 level1 lfo2;
tab-stops:list .5in'><![if !supportLists]><span style='font-family:Symbol;
mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol'><span
style='mso-list:Ignore'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><b style='mso-bidi-font-weight:normal'><span
style='font-family:Verdana'>Agent’s OnCreation should be invoked by
AgentManager in a separate thread.<o:p></o:p></span></b></p>

<p class=MsoPlainText style='margin-left:.25in'><b style='mso-bidi-font-weight:
normal'><span style='font-family:Verdana'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoPlainText style='margin-left:.5in;text-indent:-.25in;mso-list:l0 level1 lfo2;
tab-stops:list .5in'><![if !supportLists]><span style='font-family:Symbol;
mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol'><span
style='mso-list:Ignore'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><b style='mso-bidi-font-weight:normal'><span
style='font-family:Verdana'>In AgentHost, in every remote method, lock only the
data-structures that are accessed.<o:p></o:p></span></b></p>

<p class=MsoPlainText style='margin-left:.25in'><b style='mso-bidi-font-weight:
normal'><span style='font-family:Verdana'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoPlainText style='margin-left:.5in;text-indent:-.25in;mso-list:l0 level1 lfo2;
tab-stops:list .5in'><![if !supportLists]><span style='font-family:Symbol;
mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol'><span
style='mso-list:Ignore'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><b style='mso-bidi-font-weight:normal'><span
style='font-family:Verdana'>Bring the serialization/deserialization code in one
class, either AgentHost or AgentManager.<o:p></o:p></span></b></p>

<p class=MsoPlainText style='margin-left:.25in'><b style='mso-bidi-font-weight:
normal'><span style='font-family:Verdana'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoPlainText style='margin-left:.5in;text-indent:-.25in;mso-list:l0 level1 lfo2;
tab-stops:list .5in'><![if !supportLists]><span style='font-family:Symbol;
mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol'><span
style='mso-list:Ignore'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><b style='mso-bidi-font-weight:normal'><span
style='font-family:Verdana'>Stop?</span></b><span style='font-family:Verdana'>
We don’t any stop event on agent.<b style='mso-bidi-font-weight:normal'><o:p></o:p></b></span></p>

<p class=MsoPlainText style='margin-left:.25in'><b style='mso-bidi-font-weight:
normal'><span style='font-family:Verdana'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoPlainText style='margin-left:.5in;text-indent:-.25in;mso-list:l0 level1 lfo2;
tab-stops:list .5in'><![if !supportLists]><span style='font-family:Symbol;
mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol'><span
style='mso-list:Ignore'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><b style='mso-bidi-font-weight:normal'><span
style='font-family:Verdana'>Local AgentProxy should hold a reference to the
AgentManager of the referred agent. </span></b><span style='font-family:Verdana'>Will
increase speed of interaction between agents located at the same host. But,
what if the agent has been disposed off or it no longer exists at the
localhost. How would AgentProxy know this? <b style='mso-bidi-font-weight:normal'><o:p></o:p></b></span></p>

<p class=MsoPlainText style='margin-left:.25in'><b style='mso-bidi-font-weight:
normal'><span style='font-family:Verdana'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoPlainText style='margin-left:.5in;text-indent:-.25in;mso-list:l0 level1 lfo2;
tab-stops:list .5in'><![if !supportLists]><span style='font-family:Symbol;
mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol'><span
style='mso-list:Ignore'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><b style='mso-bidi-font-weight:normal'><span
style='font-family:Verdana'>OnArrival and OnMigration should be defined as:<o:p></o:p></span></b></p>

<p class=MsoPlainText style='margin-left:.5in'><span style='font-family:Verdana'><o:p>&nbsp;</o:p></span></p>

<p class=MsoPlainText style='margin-left:.5in'><span style='font-family:Verdana'>void
OnArrival(MigrationEventArgs arg);<o:p></o:p></span></p>

<p class=MsoPlainText style='margin-left:.5in'><span style='font-family:Verdana'>void
OnMigration(MigrationEventArgs arg);<o:p></o:p></span></p>

<p class=MsoPlainText style='margin-left:.5in'><span style='font-family:Verdana'><o:p>&nbsp;</o:p></span></p>

<p class=MsoPlainText style='margin-left:.5in;text-indent:-.25in;mso-list:l0 level1 lfo2;
tab-stops:list .5in'><![if !supportLists]><span style='font-family:Symbol;
mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol'><span
style='mso-list:Ignore'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><b style='mso-bidi-font-weight:normal'><span
style='font-family:Verdana'>Exception raised by an AgentWebMethod: </span></b><span
style='font-family:Verdana'>an AgentWebMethod may raise an exception. Such an
exception should be somehow transmitted to the agent invoking the method.<b
style='mso-bidi-font-weight:normal'><o:p></o:p></b></span></p>

<p class=MsoPlainText style='margin-left:.25in'><b style='mso-bidi-font-weight:
normal'><span style='font-family:Verdana'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoPlainText style='margin-left:.5in;text-indent:-.25in;mso-list:l0 level1 lfo2;
tab-stops:list .5in'><![if !supportLists]><span style='font-family:Symbol;
mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol'><span
style='mso-list:Ignore'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><b style='mso-bidi-font-weight:normal'><span
style='font-family:Verdana'>Synchronous and Asynchronous AgentWebMethod
invocation: </span></b><span style='font-family:Verdana'>may be implemented in
the AgentProxy class itself. We may provide a method called InvokeMethodAsync
for asynchronous invocation an AgentWebMethod.<b style='mso-bidi-font-weight:
normal'><o:p></o:p></b></span></p>

<p class=MsoPlainText style='margin-left:.25in'><b style='mso-bidi-font-weight:
normal'><span style='font-family:Verdana'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoPlainText style='margin-left:.5in;text-indent:-.25in;mso-list:l0 level1 lfo2;
tab-stops:list .5in'><![if !supportLists]><span style='font-family:Symbol;
mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol'><span
style='mso-list:Ignore'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><b style='mso-bidi-font-weight:normal'><span
style='font-family:Verdana'>Agent.GetCodeLocation: </span></b><span
style='font-family:Verdana'>a convenience method defined in Agent class that
returns the path of the assembly that contains the code for the calling agent.<b
style='mso-bidi-font-weight:normal'><o:p></o:p></b></span></p>

<p class=MsoPlainText style='margin-left:.25in'><b style='mso-bidi-font-weight:
normal'><span style='font-family:Verdana'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoPlainText style='margin-left:.5in;text-indent:-.25in;mso-list:l0 level1 lfo2;
tab-stops:list .5in'><![if !supportLists]><span style='font-family:Symbol;
mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol'><span
style='mso-list:Ignore'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><b style='mso-bidi-font-weight:normal'><span
style='font-family:Verdana'>ResourceManager: </span></b><span style='font-family:
Verdana'>To manage the resources accessed, allocated and consumed by an agent.
Ex. Automatically disposing off windows (and threads) opened by an agent when
it is disposed off, dispatched, or deactivated.<b style='mso-bidi-font-weight:
normal'><o:p></o:p></b></span></p>

<p class=MsoPlainText style='margin-left:.25in'><b style='mso-bidi-font-weight:
normal'><span style='font-family:Verdana'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoPlainText style='margin-left:.5in;text-indent:-.25in;mso-list:l0 level1 lfo2;
tab-stops:list .5in'><![if !supportLists]><span style='font-family:Symbol;
mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol'><span
style='mso-list:Ignore'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><b style='mso-bidi-font-weight:normal'><span
style='font-family:Verdana'>Third party library:<span
style='mso-spacerun:yes'>  </span></span></b><span style='font-family:Verdana'>It
may so happen that an agent holds references to objects that are defined in a
third-party library that is not part of the .NET Framework or the
EtherYatri.NET Framework. If such an agent is transferred to a host that does
not contain that third-party library, we will get an exception. So, for a
reference, a user should be able to specify whether he wants the class also to
be transferred if the library isn’t available at the destination host. The
EtherYatri.NET Fx could define an attribute for fields for this.<b
style='mso-bidi-font-weight:normal'><o:p></o:p></b></span></p>

<p class=MsoPlainText style='margin-left:.25in'><b style='mso-bidi-font-weight:
normal'><span style='font-family:Verdana'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoPlainText style='margin-left:.5in;text-indent:-.25in;mso-list:l0 level1 lfo2;
tab-stops:list .5in'><![if !supportLists]><span style='font-family:Symbol;
mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol'><span
style='mso-list:Ignore'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><b style='mso-bidi-font-weight:normal'><span
style='font-family:Verdana'>Shutdown:<span style='mso-spacerun:yes'>  </span></span></b><span
style='font-family:Verdana'>Why not have a method in Agent class called –
OnShutdown(ShutdownEventArgs); Agents can override this method to take
appropriate action if the host is shutting down. Issue: When would OnStopping
be called. Document the calling of methods On* properly.<b style='mso-bidi-font-weight:
normal'><o:p></o:p></b></span></p>

<p class=MsoPlainText style='margin-left:.25in'><b style='mso-bidi-font-weight:
normal'><span style='font-family:Verdana'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoPlainText style='margin-left:.5in;text-indent:-.25in;mso-list:l0 level1 lfo2;
tab-stops:list .5in'><![if !supportLists]><span style='font-family:Symbol;
mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol'><span
style='mso-list:Ignore'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><b style='mso-bidi-font-weight:normal'><span
style='font-family:Verdana'>Fault-tolerant agents: </span></b><span
style='font-family:Verdana'>To help in the writing of fault-tolerant agents,
check-pointing may be supported.<b style='mso-bidi-font-weight:normal'><o:p></o:p></b></span></p>

<p class=MsoPlainText style='margin-left:.25in'><b style='mso-bidi-font-weight:
normal'><span style='font-family:Verdana'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoPlainText style='margin-left:.5in;text-indent:-.25in;mso-list:l0 level1 lfo2;
tab-stops:list .5in'><![if !supportLists]><span style='font-family:Symbol;
mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol'><span
style='mso-list:Ignore'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span style='font-family:Verdana'>AgentProxy
class should also have a public property called <b style='mso-bidi-font-weight:
normal'>AgentWebMethods </b>which should return an array of MethodInfo objects,
each one corresponding to an agent web method of the referred agent. MethodInfo
class is serializable so, implementing shouldn’t be a big problem.<o:p></o:p></span></p>

<p class=MsoPlainText style='margin-left:.25in'><span style='font-family:Verdana'><o:p>&nbsp;</o:p></span></p>

<p class=MsoPlainText style='margin-left:.5in;text-indent:-.25in;mso-list:l0 level1 lfo2;
tab-stops:list .5in'><![if !supportLists]><span style='font-family:Symbol;
mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol'><span
style='mso-list:Ignore'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span style='font-family:Verdana'>An agent must
be able to discover what other agents are executing in its context. This is a
lot like chatting using Yahoo Messenger. Everyone can see who else is there in
the chat room. You can send messages to any one of them and communicate with
them. <o:p></o:p></span></p>

<p class=MsoPlainText style='margin-left:1.0in;text-indent:-.25in;mso-list:
l0 level2 lfo2;tab-stops:list 1.0in'><![if !supportLists]><span
style='mso-fareast-font-family:"Courier New"'><span style='mso-list:Ignore'>o<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span style='font-family:Verdana'>But if we are
to implement this feature, we also have to consider the case that an agent may
unnecessarily send messages to another agent and the other agent may not want
to communicate with the first agent. He may want to block messages from the
other agent. Like in Yahoo Messenger an agent must be able to specify which
agents should be blocked from sending messages to it. Also remember that to
implement this feature, an agent must be able to somehow determine the id of
the agent who is invoking its AgentWebMethod.<o:p></o:p></span></p>

<p class=MsoPlainText style='margin-left:.25in'><span style='font-family:Verdana'><o:p>&nbsp;</o:p></span></p>

<p class=MsoPlainText style='margin-left:.5in;text-indent:-.25in;mso-list:l0 level1 lfo2;
tab-stops:list .5in'><![if !supportLists]><span style='font-family:Symbol;
mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol'><span
style='mso-list:Ignore'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span style='font-family:Verdana'>If an agent
holds a reference to an AgentProxy object, then the user must update the
AgentProxy.LocalHost property whenever his agent migrates from one host to
another. Could this be made automatic? This is potentially unsafe because for
the user to be able to update AgentProxy.LocalHost he must somehow be provided
a reference to the AgentHost. If the user has access to the underlying
AgentHost then he can potentially do unsafe things with other agents.<o:p></o:p></span></p>

<p class=MsoPlainText style='margin-left:.25in'><span style='font-family:Verdana'><o:p>&nbsp;</o:p></span></p>

<p class=MsoPlainText style='margin-left:.5in;text-indent:-.25in;mso-list:l0 level1 lfo2;
tab-stops:list .5in'><![if !supportLists]><span style='font-family:Symbol;
mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol'><span
style='mso-list:Ignore'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><b style='mso-bidi-font-weight:normal'><span
style='font-family:Verdana'>In the communication layer check if the AgentHost
class releases all the resources <o:p></o:p></span></b></p>

<p class=MsoPlainText><span style='font-family:Verdana'><o:p>&nbsp;</o:p></span></p>

<p class=MsoPlainText style='margin-left:.5in;text-indent:-.25in;mso-list:l0 level1 lfo2;
tab-stops:list .5in'><![if !supportLists]><span style='font-family:Symbol;
mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol'><span
style='mso-list:Ignore'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span style='font-family:Verdana'>Read about
leasetime etc.<o:p></o:p></span></p>

<p class=MsoPlainText><span style='font-family:Verdana'><o:p>&nbsp;</o:p></span></p>

<p class=MsoPlainText style='margin-left:.5in;text-indent:-.25in;mso-list:l0 level1 lfo2;
tab-stops:list .5in'><![if !supportLists]><span style='font-family:Symbol;
mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol'><span
style='mso-list:Ignore'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><b style='mso-bidi-font-weight:normal'><span
style='font-family:Verdana'>Resolve the bug that the CLR continues accessing an
agent assembly even after its execution has been terminated.</span></b><span
style='font-family:Verdana'> Well, I still haven’t looked into this properly. But
one thing, we need to terminate the threads of all the agents that are
executing when the user wants to shut down WINAH. This has to be done in the
Stop method of AgentHost class. But even after the execution of the agent has
terminated, it seems that the runtime is still accessing the assembly file in
some way. This is because, the assembly still remains loaded in the AppDomain
of WINAH. In .NET it is not possible to unload an assembly, the whole AppDomain
has to be unloaded. The solution to this problem would be to load agents in
different AppDomains. But then, objects can’t be shared between AppDomains.
Then, how will the EtherYatri.NET Runtime be shared between all the agents.<b
style='mso-bidi-font-weight:normal'><o:p></o:p></b></span></p>

<p class=MsoPlainText><span style='font-family:Verdana'><o:p>&nbsp;</o:p></span></p>

<p class=MsoPlainText style='margin-left:.5in;text-indent:-.25in;mso-list:l0 level1 lfo2;
tab-stops:list .5in'><![if !supportLists]><span style='font-family:Symbol;
mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol'><span
style='mso-list:Ignore'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span style='font-family:Verdana'>How about
making .NET Remoting classes/interfaces inaccessible to user agents.<o:p></o:p></span></p>

<p class=MsoPlainText><span style='font-family:Verdana'><o:p>&nbsp;</o:p></span></p>

<p class=MsoPlainText style='margin-left:.5in;text-indent:-.25in;mso-list:l0 level1 lfo2;
tab-stops:list .5in'><![if !supportLists]><span style='font-family:Symbol;
mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol'><span
style='mso-list:Ignore'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><b style='mso-bidi-font-weight:normal'><span
style='font-family:Verdana'>AgentProxy.Dispose should be renamed to
AgentProxy.KillAgent.<o:p></o:p></span></b></p>

<p class=MsoPlainText><span style='font-family:Verdana'><o:p>&nbsp;</o:p></span></p>

<p class=MsoPlainText style='margin-left:.5in;text-indent:-.25in;mso-list:l0 level1 lfo2;
tab-stops:list .5in'><![if !supportLists]><span style='font-family:Symbol;
mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol'><span
style='mso-list:Ignore'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span style='font-family:Verdana'>GetHashCode</span>
<span style='font-family:Verdana'>and Equals should be overridden and made
private in appropriate classes to prevent clients from using them.<o:p></o:p></span></p>

<p class=MsoPlainText><span style='font-family:Verdana'><o:p>&nbsp;</o:p></span></p>

<p class=MsoPlainText style='margin-left:.5in;text-indent:-.25in;mso-list:l0 level1 lfo2;
tab-stops:list .5in'><![if !supportLists]><span style='font-family:Symbol;
mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol'><span
style='mso-list:Ignore'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><b style='mso-bidi-font-weight:normal'><span
style='font-family:Verdana'>[PUNT]</span></b><span style='font-family:Verdana'>
Refactor the runtime into two -- Class library and the core runtime and compile
them into separate dlls. <i style='mso-bidi-font-style:normal'>Not needed.</i><o:p></o:p></span></p>

<p class=MsoPlainText><span style='font-family:Verdana'><o:p>&nbsp;</o:p></span></p>

<p class=MsoPlainText style='margin-left:.5in;text-indent:-.25in;mso-list:l0 level1 lfo2;
tab-stops:list .5in'><![if !supportLists]><span style='font-family:Symbol;
mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol'><span
style='mso-list:Ignore'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><b style='mso-bidi-font-weight:normal'><span
style='font-family:Verdana'>Look at AgentProxy class. Do we need to change some
access modifiers to ensure security.<o:p></o:p></span></b></p>

<p class=MsoPlainText><span style='font-family:Verdana'><o:p>&nbsp;</o:p></span></p>

<p class=MsoPlainText style='margin-left:.5in;text-indent:-.25in;mso-list:l0 level1 lfo2;
tab-stops:list .5in'><![if !supportLists]><span style='font-family:Symbol;
mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol'><span
style='mso-list:Ignore'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><b style='mso-bidi-font-weight:normal'><span
style='font-family:Verdana'>Introduce appropriate exception classes. <o:p></o:p></span></b></p>

<p class=MsoPlainText><b style='mso-bidi-font-weight:normal'><span
style='font-family:Verdana'><span style='mso-tab-count:1'>            </span>*
AgentException<o:p></o:p></span></b></p>

<p class=MsoPlainText><b style='mso-bidi-font-weight:normal'><span
style='font-family:Verdana'><span style='mso-tab-count:1'>            </span>*
HostNotFoundException<o:p></o:p></span></b></p>

<p class=MsoPlainText><b style='mso-bidi-font-weight:normal'><span
style='font-family:Verdana'><span style='mso-tab-count:1'>            </span>*
AgentWebMethodException<o:p></o:p></span></b></p>

<p class=MsoPlainText><b style='mso-bidi-font-weight:normal'><span
style='font-family:Verdana'><span style='mso-tab-count:1'>            </span>*
InvalidAgentWebMethodException<o:p></o:p></span></b></p>

<p class=MsoPlainText><b style='mso-bidi-font-weight:normal'><span
style='font-family:Verdana'><span style='mso-tab-count:1'>            </span>*
InvalidAgentWebMethodArgsException<o:p></o:p></span></b></p>

<p class=MsoPlainText><b style='mso-bidi-font-weight:normal'><span
style='font-family:Verdana'><span style='mso-tab-count:1'>            </span>*
InvalidProxyException<o:p></o:p></span></b></p>

<p class=MsoPlainText><b style='mso-bidi-font-weight:normal'><span
style='font-family:Verdana'><span style='mso-tab-count:1'>            </span>*
AgentNotFoundException<o:p></o:p></span></b></p>

<p class=MsoPlainText><span style='font-family:Verdana'><o:p>&nbsp;</o:p></span></p>

<p class=MsoPlainText style='margin-left:.5in;text-indent:-.25in;mso-list:l0 level1 lfo2;
tab-stops:list .5in'><![if !supportLists]><span style='font-family:Symbol;
mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol'><span
style='mso-list:Ignore'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><b style='mso-bidi-font-weight:normal'><span
style='font-family:Verdana'>Modify the class library to return appropriate
exceptions as and when an error happens.<o:p></o:p></span></b></p>

<p class=MsoPlainText style='margin-left:.25in'><span style='font-family:Verdana'><o:p>&nbsp;</o:p></span></p>

<p class=MsoPlainText style='margin-left:.5in;text-indent:-.25in;mso-list:l0 level1 lfo2;
tab-stops:list .5in'><![if !supportLists]><span style='font-family:Symbol;
mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol'><span
style='mso-list:Ignore'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><b style='mso-bidi-font-weight:normal'><span
style='font-family:Verdana'>Introduce a MessageManager Class. <o:p></o:p></span></b></p>

<p class=MsoPlainText><span style='font-family:Verdana'><span style='mso-tab-count:
1'>          </span>* One MessageManager will be associated with each agent.<o:p></o:p></span></p>

<p class=MsoPlainText><span style='font-family:Verdana'><span style='mso-tab-count:
1'>          </span>* AgentManager class will keep a reference to an object of
MessageManager Class.<o:p></o:p></span></p>

<p class=MsoPlainText><span style='font-family:Verdana'><span style='mso-tab-count:
1'>          </span>* Everyone who needs to invoke some method on the agent
will passon the appropriate information to the AgentManager and asking him to
invoke the specified method on the agent. AgentManager will passon this
information to its MessageManager. MessageManager will deliver the method and
the appropriate event on the agent.<o:p></o:p></span></p>

<p class=MsoPlainText><span style='font-family:Verdana'><o:p>&nbsp;</o:p></span></p>

<p class=MsoPlainText><span style='font-family:Verdana'><span
style='mso-spacerun:yes'>   </span>Introduce another class called
MessageBuffer.<o:p></o:p></span></p>

<p class=MsoPlainText><span style='font-family:Verdana'><span
style='mso-spacerun:yes'>  </span><span
style='mso-spacerun:yes'>           </span>* AgentManager during initialization
would create and keep a reference to a MessageManager. AgentManager will pass
its MessageManager a reference to a MessageBuffer. <o:p></o:p></span></p>

<p class=MsoPlainText><span style='font-family:Verdana'><span style='mso-tab-count:
1'>          </span>* AgentManager will act like a Writer and MessageManager
will act like a Reader.<o:p></o:p></span></p>

<p class=MsoPlainText><span style='font-family:Verdana'><span
style='mso-spacerun:yes'>             </span>* All public methods of
MessageBuffer will be synchronized.<o:p></o:p></span></p>

<p class=MsoPlainText><span style='font-family:Verdana'><span style='mso-tab-count:
1'>          </span>* MessageBuffer will have methods/properties like:<o:p></o:p></span></p>

<p class=MsoPlainText><span style='font-family:Verdana'><span style='mso-tab-count:
2'>                   </span>1. Add <span style='mso-tab-count:1'>          </span>//
Will add a message to the buffer<o:p></o:p></span></p>

<p class=MsoPlainText><span style='font-family:Verdana'><span style='mso-tab-count:
2'>                   </span>2. Remove [WonderWhenWouldItBeUseful] // Will
remove a message from the buffer<o:p></o:p></span></p>

<p class=MsoPlainText><span style='font-family:Verdana'><span style='mso-tab-count:
2'>                   </span>3. IsEmpty // returns true if the buffer is empty,
false otherwise<o:p></o:p></span></p>

<p class=MsoPlainText><span style='font-family:Verdana'><span style='mso-tab-count:
2'>                   </span>4. GetNext // returns a reference to the next
message in the buffer. The message returned would be removed from the message
buffer.<o:p></o:p></span></p>

<p class=MsoPlainText><span style='font-family:Verdana'><span style='mso-tab-count:
1'>          </span>* MessageManager will run in a thread of its own. If the
MessageBuffer is empty, MessageManager will block waiting for incoming
messages.<o:p></o:p></span></p>

<p class=MsoPlainText><span style='font-family:Verdana'><o:p>&nbsp;</o:p></span></p>

<p class=MsoPlainText><span style='font-family:Verdana'><span
style='mso-spacerun:yes'>  </span>Introduce another class called SystemMessage.<o:p></o:p></span></p>

<p class=MsoPlainText><span style='font-family:Verdana'><span style='mso-tab-count:
1'>          </span>* MessageBuffer will keep a list of SystemMessage's.<o:p></o:p></span></p>

<p class=MsoPlainText><span style='font-family:Verdana'><span style='mso-tab-count:
1'>          </span>* SystemMessage will just be key-value pair sort of thing.<o:p></o:p></span></p>

<p class=MsoPlainText><span style='font-family:Verdana'><o:p>&nbsp;</o:p></span></p>

<p class=MsoPlainText style='margin-left:.5in;text-indent:-.25in;mso-list:l0 level1 lfo2;
tab-stops:list .5in'><![if !supportLists]><span style='font-family:Symbol;
mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol'><span
style='mso-list:Ignore'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span style='font-family:Verdana'>For Queue:
read
ms-help://MS.VSCC/MS.MSDNVS/cpref/html/frlrfsystemcollectionsqueueclasstopic.htm
<o:p></o:p></span></p>

<p class=MsoPlainText style='margin-left:.5in;text-indent:-.25in;mso-list:l0 level1 lfo2;
tab-stops:list .5in'><![if !supportLists]><span style='font-family:Symbol;
mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol'><span
style='mso-list:Ignore'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span style='font-family:Verdana'>To implement
priorities, we could use a SortedList
ms-help://MS.VSCC/MS.MSDNVS/cpref/html/frlrfsystemcollectionssortedlistclasstopic.htm
<b style='mso-bidi-font-weight:normal'>But </b>SortedList does not allow
multiple keys to be inserted. <o:p></o:p></span></p>

<p class=MsoPlainText><span style='font-family:Verdana'><o:p>&nbsp;</o:p></span></p>

<p class=MsoPlainText><span style='font-family:Verdana'>We can implement
priorities using Queue in the following manner:<o:p></o:p></span></p>

<p class=MsoPlainText style='margin-left:.5in;text-indent:-.25in;mso-list:l0 level1 lfo2;
tab-stops:list .5in'><![if !supportLists]><span style='font-family:Symbol;
mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol'><span
style='mso-list:Ignore'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span style='font-family:Verdana'>We use two
queues. One for system-messages and another for inter-agent communication
messages. The queue for system-messages will have a higher priority over the
one of inter-agent communication messages. If the queue of system-messages is
empty, a message from the inter-agent communication queue will be delivered. We
should define the following classes:<o:p></o:p></span></p>

<p class=MsoPlainText style='margin-left:1.0in;text-indent:-.25in;mso-list:
l0 level2 lfo2;tab-stops:list 1.0in'><![if !supportLists]><span
style='mso-fareast-font-family:"Courier New"'><span style='mso-list:Ignore'>o<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span style='font-family:Verdana'>Event<o:p></o:p></span></p>

<p class=MsoPlainText style='margin-left:1.0in;text-indent:-.25in;mso-list:
l0 level2 lfo2;tab-stops:list 1.0in'><![if !supportLists]><span
style='mso-fareast-font-family:"Courier New"'><span style='mso-list:Ignore'>o<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span style='font-family:Verdana'>LifecycleEvent
extending Event: we shall use an enumeration to differentiate among the
different kinds of system messages, like: Creation, Run, Arrival, Migration,
Stop, etc. Additionaly, we will hold a reference to an object of type
AgentEventArgs. AgentEventArgs will be base of all agents like: MobilityEventArgs,
ArrivalEventArgs, etc.<o:p></o:p></span></p>

<p class=MsoPlainText style='margin-left:1.0in;text-indent:-.25in;mso-list:
l0 level2 lfo2;tab-stops:list 1.0in'><![if !supportLists]><span
style='mso-fareast-font-family:"Courier New"'><span style='mso-list:Ignore'>o<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span style='font-family:Verdana'>CommunicationEvent
extending Event: reference to a MethodInfo that describes the method to be
invoked. <o:p></o:p></span></p>

<p class=MsoPlainText style='margin-left:1.0in;text-indent:-.25in;mso-list:
l0 level2 lfo2;tab-stops:list 1.0in'><![if !supportLists]><span
style='mso-fareast-font-family:"Courier New"'><span style='mso-list:Ignore'>o<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span style='font-family:Verdana'>CommunicationExceptionEvent
extending Event: specifies an exception raised when the invocation of an
AgentWebMethod was requested.<o:p></o:p></span></p>

<p class=MsoPlainText style='margin-left:1.0in;text-indent:-.25in;mso-list:
l0 level2 lfo2;tab-stops:list 1.0in'><![if !supportLists]><span
style='mso-fareast-font-family:"Courier New"'><span style='mso-list:Ignore'>o<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span style='font-family:Verdana'>What about
exceptions?<o:p></o:p></span></p>

<p class=MsoPlainText style='margin-left:.5in;text-indent:-.25in;mso-list:l0 level1 lfo2;
tab-stops:list .5in'><![if !supportLists]><span style='font-family:Symbol;
mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol'><span
style='mso-list:Ignore'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span style='font-family:Verdana'><o:p>&nbsp;</o:p></span></p>

<p class=MsoPlainText><span style='font-family:Verdana'><o:p>&nbsp;</o:p></span></p>

<p class=MsoPlainText style='margin-left:.5in;text-indent:-.25in;mso-list:l0 level1 lfo2;
tab-stops:list .5in'><![if !supportLists]><span style='font-family:Symbol;
mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol'><span
style='mso-list:Ignore'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span style='font-family:Verdana'>Read Aglets
book pg. 103, section 6.4 for a description of Message Management. <o:p></o:p></span></p>

<p class=MsoPlainText><span style='font-family:Verdana'><o:p>&nbsp;</o:p></span></p>

<p class=MsoPlainText style='margin-left:.5in;text-indent:-.25in;mso-list:l0 level1 lfo2;
tab-stops:list .5in'><![if !supportLists]><span style='font-family:Symbol;
mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol'><span
style='mso-list:Ignore'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><b style='mso-bidi-font-weight:normal'><span
style='font-family:Verdana'>What if an agent wishes to specify that is willing
to service parallel invocation of one or more of its AgentWebMethods?<o:p></o:p></span></b></p>

<p class=MsoPlainText><b style='mso-bidi-font-weight:normal'><span
style='font-family:Verdana'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoPlainText style='margin-left:.5in;text-indent:-.25in;mso-list:l0 level1 lfo2;
tab-stops:list .5in'><![if !supportLists]><span style='font-family:Symbol;
mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol'><span
style='mso-list:Ignore'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><b style='mso-bidi-font-weight:normal'><span
style='font-family:Verdana'>Specify in the documentation that classes used in
AgentWebMethods as args and return values should be installed at both hosts.<o:p></o:p></span></b></p>

<p class=MsoPlainText><b style='mso-bidi-font-weight:normal'><span
style='font-family:Verdana'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoPlainText style='margin-left:.5in;text-indent:-.25in;mso-list:l0 level1 lfo2;
tab-stops:list .5in'><![if !supportLists]><span style='font-family:Symbol;
mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol'><span
style='mso-list:Ignore'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><b style='mso-bidi-font-weight:normal'><span
style='font-family:Verdana'>How about multicast messaging?<o:p></o:p></span></b></p>

<p class=MsoPlainText><span style='font-family:Verdana'><o:p>&nbsp;</o:p></span></p>

<p class=MsoPlainText><b style='mso-bidi-font-weight:normal'><span
style='font-family:Verdana'><span style='mso-spacerun:yes'>  </span>Do we need
message priorities? I am deferring this feature for now.<o:p></o:p></span></b></p>

<p class=MsoPlainText><span style='font-family:Verdana'><o:p>&nbsp;</o:p></span></p>

<p class=MsoPlainText style='margin-left:.5in;text-indent:-.25in;mso-list:l0 level1 lfo2;
tab-stops:list .5in'><![if !supportLists]><span style='font-family:Symbol;
mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol'><span
style='mso-list:Ignore'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span style='font-family:Verdana'>In AgentHost
class first check if the host on which a method is to be called is the
localhost. If so, by-pass the .NET Remoting layer and call the method directly
and return the results.<o:p></o:p></span></p>

<p class=MsoPlainText><span style='font-family:Verdana'><o:p>&nbsp;</o:p></span></p>

<p class=MsoPlainText style='margin-left:.5in;text-indent:-.25in;mso-list:l0 level1 lfo2;
tab-stops:list .5in'><![if !supportLists]><span style='font-family:Symbol;
mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol'><span
style='mso-list:Ignore'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span style='font-family:Verdana'>Implement
security mechanisms. Study the hacks possible and the security mechanisms
available on .NET before implementing this. Here’s a snippet that I found in a
.NET Remoting user-article on MSDN/INDIA. Use the HttpChannel with the
BinaryFormatter. Host your components in IIS if you need scalability,
authentication and authorization features.<o:p></o:p></span></p>

<p class=MsoPlainText><span style='font-family:Verdana'><o:p>&nbsp;</o:p></span></p>

<p class=MsoPlainText style='margin-left:.5in;text-indent:-.25in;mso-list:l0 level1 lfo2;
tab-stops:list .5in'><![if !supportLists]><span style='font-family:Symbol;
mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol'><span
style='mso-list:Ignore'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span style='font-family:Verdana'><o:p>&nbsp;</o:p></span></p>

<p class=MsoPlainText style='margin-left:.5in;text-indent:-.25in;mso-list:l0 level1 lfo2;
tab-stops:list .5in'><![if !supportLists]><span style='font-family:Symbol;
mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol'><span
style='mso-list:Ignore'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><b style='mso-bidi-font-weight:normal'><span
style='font-family:Verdana'>[LATER]</span></b><span style='font-family:Verdana'>
Support Agent Design Patterns by introducing appropriate classes. <o:p></o:p></span></p>

<p class=MsoPlainText><span style='font-family:Verdana'><o:p>&nbsp;</o:p></span></p>

<p class=MsoPlainText><span style='font-family:Verdana'><o:p>&nbsp;</o:p></span></p>

<h2>WINAH Related</h2>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoPlainText style='margin-left:.5in;text-indent:-.25in;mso-list:l0 level1 lfo2;
tab-stops:list .5in'><![if !supportLists]><span style='font-family:Symbol;
mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol'><span
style='mso-list:Ignore'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span style='font-family:Verdana'>If in the Send
Agent dialog box, the url of the address of the destination host is same as the
address<o:p></o:p></span></p>

<p class=MsoPlainText style='margin-left:.5in'><span style='font-family:Verdana'>Of
the local host then and warning message should be displayed to the user.<o:p></o:p></span></p>

<p class=MsoPlainText style='margin-left:.25in'><span style='font-family:Verdana'><o:p>&nbsp;</o:p></span></p>

<p class=MsoPlainText style='margin-left:.5in;text-indent:-.25in;mso-list:l0 level1 lfo2;
tab-stops:list .5in'><![if !supportLists]><span style='font-family:Symbol;
mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol'><span
style='mso-list:Ignore'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span style='font-family:Verdana'>After security
mechanisms have been implemented, i.e. we are able to specify what permissions
are allowed to an agent and which aren’t, every host must be able to do the
following:<o:p></o:p></span></p>

<p class=MsoPlainText style='margin-left:1.0in;text-indent:-.25in;mso-list:
l0 level2 lfo2;tab-stops:list 1.0in'><![if !supportLists]><span
style='mso-fareast-font-family:"Courier New"'><span style='mso-list:Ignore'>o<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span style='font-family:Verdana'>Look at
Windows Messenger’s Tools-&gt;Options-&gt;Privacy tab. Similar to that every
WINAH must be able to specify:<o:p></o:p></span></p>

<p class=MsoPlainText style='margin-left:1.5in;text-indent:-.25in;mso-list:
l0 level3 lfo2;tab-stops:list 1.5in'><![if !supportLists]><span
style='font-family:Wingdings;mso-fareast-font-family:Wingdings;mso-bidi-font-family:
Wingdings'><span style='mso-list:Ignore'>§<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><b style='mso-bidi-font-weight:normal'><span
style='font-family:Verdana'>An Allow List:</span></b><span style='font-family:
Verdana'> Can see WINAH’s online status, and send agents.<o:p></o:p></span></p>

<p class=MsoPlainText style='margin-left:1.5in;text-indent:-.25in;mso-list:
l0 level3 lfo2;tab-stops:list 1.5in'><![if !supportLists]><span
style='font-family:Wingdings;mso-fareast-font-family:Wingdings;mso-bidi-font-family:
Wingdings'><span style='mso-list:Ignore'>§<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><b style='mso-bidi-font-weight:normal'><span
style='font-family:Verdana'>A Block List:</span></b><span style='font-family:
Verdana'> Cannot see WINAH’s online status, and cannot send agents.<o:p></o:p></span></p>

<p class=MsoPlainText style='margin-left:1.0in'><span style='font-family:Verdana'><o:p>&nbsp;</o:p></span></p>

<p class=MsoPlainText style='margin-left:1.0in'><span style='font-family:Verdana'>But
what about agents from hosts that occur in neither Allow List, nor Block List?
So, the WINAH administrator must also be able to specify “<i style='mso-bidi-font-style:
normal'>Should agents be accepted from hosts than do not occur in Allow List?</i>”<o:p></o:p></span></p>

<p class=MsoPlainText style='margin-left:.25in'><span style='font-family:Verdana'><o:p>&nbsp;</o:p></span></p>

<p class=MsoPlainText style='margin-left:.5in;text-indent:-.25in;mso-list:l0 level1 lfo2;
tab-stops:list .5in'><![if !supportLists]><span style='font-family:Symbol;
mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol'><span
style='mso-list:Ignore'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><b style='mso-bidi-font-weight:normal'><span
style='font-family:Verdana'>Current active agents only displays the agents that
have been created directly by the user. Display all agents.<o:p></o:p></span></b></p>

<p class=MsoPlainText><span style='font-family:Verdana'><o:p>&nbsp;</o:p></span></p>

<p class=MsoPlainText style='margin-left:.5in;text-indent:-.25in;mso-list:l0 level1 lfo2;
tab-stops:list .5in'><![if !supportLists]><span style='font-family:Symbol;
mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol'><span
style='mso-list:Ignore'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span style='font-family:Verdana'>Handle the
Send and Kill request in a separate thread to prevent the UI from hanging.<o:p></o:p></span></p>

<p class=MsoPlainText><span style='font-family:Verdana'><o:p>&nbsp;</o:p></span></p>

<p class=MsoPlainText style='margin-left:.5in;text-indent:-.25in;mso-list:l0 level1 lfo2;
tab-stops:list .5in'><![if !supportLists]><span style='font-family:Symbol;
mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol'><span
style='mso-list:Ignore'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span style='font-family:Verdana'>Have an
attribute in the class-library that defines the version of WINAH. Query this
attribute and the version attribute in the class-library and display it in the
About dialog box.<o:p></o:p></span></p>

<p class=MsoPlainText><span style='font-family:Verdana'><o:p>&nbsp;</o:p></span></p>

<p class=MsoPlainText style='margin-left:.5in;text-indent:-.25in;mso-list:l0 level1 lfo2;
tab-stops:list .5in'><![if !supportLists]><span style='font-family:Symbol;
mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol'><span
style='mso-list:Ignore'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span style='font-family:Verdana'>Do exception
handling in Create Agent.<o:p></o:p></span></p>

<p class=MsoPlainText><span style='font-family:Verdana'><o:p>&nbsp;</o:p></span></p>

<p class=MsoPlainText style='margin-left:.5in;text-indent:-.25in;mso-list:l0 level1 lfo2;
tab-stops:list .5in'><![if !supportLists]><span style='font-family:Symbol;
mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol'><span
style='mso-list:Ignore'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span style='font-family:Verdana'>Allow
operations like Kill, Move, Send Message to performed on mobile agents. Do
exception handling while implementing these features.<o:p></o:p></span></p>

<p class=MsoPlainText><span style='font-family:Verdana'><o:p>&nbsp;</o:p></span></p>

<p class=MsoPlainText style='margin-left:.5in;text-indent:-.25in;mso-list:l0 level1 lfo2;
tab-stops:list .5in'><![if !supportLists]><span style='font-family:Symbol;
mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol'><span
style='mso-list:Ignore'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span style='font-family:Verdana'>In
CreateNewAgent Form after the user has selected an assembly file, use
reflection to display all the types of all agents in a drop-down list.<o:p></o:p></span></p>

<p class=MsoPlainText style='text-indent:.5in'><span style='font-family:Verdana'>*
Recent Agents: In the Create New Agent dialog-box, display the recently loaded
agents. We may use a data-grid for this. The datagrid will have the following
columns:<o:p></o:p></span></p>

<p class=MsoPlainText><span style='font-family:Verdana'><span style='mso-tab-count:
1'>          </span>1. Path of Agent's Assembly File<o:p></o:p></span></p>

<p class=MsoPlainText><span style='font-family:Verdana'><span style='mso-tab-count:
1'>          </span>2. Full Name of Agent's Type<o:p></o:p></span></p>

<p class=MsoPlainText><span style='font-family:Verdana'><span style='mso-tab-count:
1'>          </span>3. Initialization string<o:p></o:p></span></p>

<p class=MsoPlainText><span style='font-family:Verdana'><span style='mso-tab-count:
1'>          </span>4. Nickname (optional)<o:p></o:p></span></p>

<p class=MsoPlainText><span style='font-family:Verdana'><o:p>&nbsp;</o:p></span></p>

<p class=MsoPlainText style='margin-left:.5in;text-indent:-.25in;mso-list:l0 level1 lfo2;
tab-stops:list .5in'><![if !supportLists]><span style='font-family:Symbol;
mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol'><span
style='mso-list:Ignore'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span style='font-family:Verdana'>If Recent
Agent's list as described above is implemented, then the Create New Agent dialog
box would also need to modified to ask for a nick-name for the agent being
loaded.<o:p></o:p></span></p>

<p class=MsoPlainText style='margin-left:.25in'><span style='font-family:Verdana'><o:p>&nbsp;</o:p></span></p>

<p class=MsoPlainText style='margin-left:.5in;text-indent:-.25in;mso-list:l0 level1 lfo2;
tab-stops:list .5in'><![if !supportLists]><span style='font-family:Symbol;
mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol'><span
style='mso-list:Ignore'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span style='font-family:Verdana'>In the
preferences allow for WINAH to be started without displaying a UI.<o:p></o:p></span></p>

<p class=MsoPlainText><span style='font-family:Verdana'><o:p>&nbsp;</o:p></span></p>

<p class=MsoPlainText style='margin-left:.5in;text-indent:-.25in;mso-list:l0 level1 lfo2;
tab-stops:list .5in'><![if !supportLists]><span style='font-family:Symbol;
mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol'><span
style='mso-list:Ignore'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span style='font-family:Verdana'>Incorporate a
mechanism in WINAH to send some message from WINAH to us. <o:p></o:p></span></p>

<p class=MsoPlainText><span style='font-family:Verdana'><span
style='mso-spacerun:yes'>  </span><span style='mso-tab-count:1'>        </span>1.
We might use a Web-Service as a mediator between us - the developers, and
WINAH. WINAH will pass on the message to the Web-Service.<o:p></o:p></span></p>

<p class=MsoPlainText><span style='font-family:Verdana'><span style='mso-tab-count:
2'>                   </span>a. The Web-Service might record this message into
a database. We will write a client application that calls on the Web-Service to
retrieve the unread messages from the database.<o:p></o:p></span></p>

<p class=MsoPlainText><span style='font-family:Verdana'><span style='mso-tab-count:
2'>                   </span>b. Or, the Web-Service may send the message
directly to a specific email account, like: </span><st1:PersonName><span
 style='font-family:Verdana'>siddharthuppal@yahoo.co.in</span></st1:PersonName><span
style='font-family:Verdana'><o:p></o:p></span></p>

<p class=MsoPlainText><span style='font-family:Verdana'><span style='mso-tab-count:
1'>          </span>2. WINAH may somehow compose and send the message as a mail
message to a specific email address, like: </span><st1:PersonName><span
 style='font-family:Verdana'>siddharthuppal@yahoo.co.in</span></st1:PersonName><span
style='font-family:Verdana'><o:p></o:p></span></p>

<p class=MsoPlainText><span style='font-family:Verdana'><o:p>&nbsp;</o:p></span></p>

<p class=MsoPlainText style='margin-left:.5in;text-indent:-.25in;mso-list:l0 level1 lfo2;
tab-stops:list .5in'><![if !supportLists]><span style='font-family:Symbol;
mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol'><span
style='mso-list:Ignore'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span style='font-family:Verdana'>On top of the
above, Communicatoin mechanism, incorporate a mechanism in WINAH to collect
information related to Internal Errors if the user permits.<o:p></o:p></span></p>

<p class=MsoPlainText style='margin-left:.25in'><span style='font-family:Verdana'><o:p>&nbsp;</o:p></span></p>

<p class=MsoPlainText style='margin-left:.5in;text-indent:-.25in;mso-list:l0 level1 lfo2;
tab-stops:list .5in'><![if !supportLists]><span style='font-family:Symbol;
mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol'><span
style='mso-list:Ignore'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span style='font-family:Verdana'><o:p>&nbsp;</o:p></span></p>

<p class=MsoPlainText style='margin-left:.5in;text-indent:-.25in;mso-list:l0 level1 lfo2;
tab-stops:list .5in'><![if !supportLists]><span style='font-family:Symbol;
mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol'><span
style='mso-list:Ignore'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span style='font-family:Verdana'>Add a easily
visible button to collect user feedback. Use the communication mechanism
discussed above for this.<o:p></o:p></span></p>

<p class=MsoPlainText><span style='font-family:Verdana'><o:p>&nbsp;</o:p></span></p>

<p class=MsoPlainText style='margin-left:.5in;text-indent:-.25in;mso-list:l0 level1 lfo2;
tab-stops:list .5in'><![if !supportLists]><span style='font-family:Symbol;
mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol'><span
style='mso-list:Ignore'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span style='font-family:Verdana'>Allow the user
of WINAH to add key-value pairs to the agent context.<o:p></o:p></span></p>

<p class=MsoPlainText><span style='font-family:Verdana'><o:p>&nbsp;</o:p></span></p>

<p class=MsoPlainText><span style='font-family:Verdana'><o:p>&nbsp;</o:p></span></p>

<h2>VS.NET Integration Related</h2>

<p class=MsoPlainText><span style='font-family:Verdana'><o:p>&nbsp;</o:p></span></p>

<p class=MsoPlainText style='margin-left:.5in;text-indent:-.25in;mso-list:l0 level1 lfo2;
tab-stops:list .5in'><![if !supportLists]><span style='font-family:Symbol;
mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol'><span
style='mso-list:Ignore'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span style='font-family:Verdana'>While it would
be very good if Ctrl-F5 is all that a user would need to hit to set his startup
agent running, another option is to have an Add-In. The Add-In will have a
button like 'Run'. The Add-In will first build the solution if it hasn't been
already built. Next, the Add-In will display a dialog where you would specify
the Startup agent and any initialization arguments that you would like to pass
to the agent. The Add-In will also require you to select an instance of WINAH
from the list of WINAH's that you have running on the machine. The Add-In will
then contact the selected WINAH, load and set the startup agent executing in
it.<o:p></o:p></span></p>

<p class=MsoPlainText><span style='font-family:Verdana'><span style='mso-tab-count:
1'>          </span>1. The Add-In will always communicate to WINAH using .NET
Remoting. WINAH might use whatever technology it wants for interhost
communication.<o:p></o:p></span></p>

<p class=MsoPlainText><span style='font-family:Verdana'><o:p>&nbsp;</o:p></span></p>

<p class=MsoPlainText style='margin-left:.5in;text-indent:-.25in;mso-list:l0 level1 lfo2;
tab-stops:list .5in'><![if !supportLists]><span style='font-family:Symbol;
mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol'><span
style='mso-list:Ignore'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><b style='mso-bidi-font-weight:normal'><span
style='font-family:Verdana'>[Non-Critical]</span></b><span style='font-family:
Verdana'> Like in Web-Applications, every project will have a Start-up agent.<o:p></o:p></span></p>

<p class=MsoPlainText style='margin-left:.25in'><span style='font-family:Verdana'><o:p>&nbsp;</o:p></span></p>

<p class=MsoPlainText style='margin-left:.5in;text-indent:-.25in;mso-list:l0 level1 lfo2;
tab-stops:list .5in'><![if !supportLists]><span style='font-family:Symbol;
mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol'><span
style='mso-list:Ignore'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><b style='mso-bidi-font-weight:normal'><span
style='font-family:Verdana'>[Non-Critical]</span></b><span style='font-family:
Verdana'> When the user hits Ctrl-F5, if the solutions compiles successfully,
the Startup-Agent of the Startup Project should be loaded and set executing in
WINAH.<o:p></o:p></span></p>

<p class=MsoPlainText><span style='font-family:Verdana'><o:p>&nbsp;</o:p></span></p>

<p class=MsoPlainText style='margin-left:.5in;text-indent:-.25in;mso-list:l0 level1 lfo2;
tab-stops:list .5in'><![if !supportLists]><span style='font-family:Symbol;
mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol'><span
style='mso-list:Ignore'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><b style='mso-bidi-font-weight:normal'><span
style='font-family:Verdana'>[LATER]</span></b><span style='font-family:Verdana'>
Support Agent design patterns via wizards.<o:p></o:p></span></p>

<p class=MsoPlainText><span style='font-family:Verdana'><o:p>&nbsp;</o:p></span></p>

<p class=MsoPlainText><span style='font-family:Verdana'><o:p>&nbsp;</o:p></span></p>

<p class=MsoPlainText><span style='font-family:Verdana'><o:p>&nbsp;</o:p></span></p>

<p class=MsoPlainText><span style='font-family:Verdana'><o:p>&nbsp;</o:p></span></p>

<h2>Help and Samples Related</h2>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoPlainText style='margin-left:.5in;text-indent:-.25in;mso-list:l0 level1 lfo2;
tab-stops:list .5in'><![if !supportLists]><span style='font-family:Symbol;
mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol'><span
style='mso-list:Ignore'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span style='font-family:Verdana'>For every
sample mention how to use it. What inputs should be given to it? What outputs
to expect? What are the concepts involved?<o:p></o:p></span></p>

<p class=MsoPlainText style='margin-left:.25in'><span style='font-family:Verdana'><o:p>&nbsp;</o:p></span></p>

<p class=MsoPlainText style='margin-left:.5in;text-indent:-.25in;mso-list:l0 level1 lfo2;
tab-stops:list .5in'><![if !supportLists]><span style='font-family:Symbol;
mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol'><span
style='mso-list:Ignore'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span style='font-family:Verdana'>In the
EtherYatri solution use the samples in the DOCS directory while testing. These
samples are the ones that go into the setup.<o:p></o:p></span></p>

<p class=MsoPlainText><span style='font-family:Verdana'><o:p>&nbsp;</o:p></span></p>

<p class=MsoPlainText><span style='font-family:Verdana'><o:p>&nbsp;</o:p></span></p>

<h2>Setup Related</h2>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoPlainText style='margin-left:.5in;text-indent:-.25in;mso-list:l0 level1 lfo2;
tab-stops:list .5in'><![if !supportLists]><span style='font-family:Symbol;
mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol'><span
style='mso-list:Ignore'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span style='font-family:Verdana'>If an
exception is raised for some reason, then the setup should be rolled back
automatically. Read on Launch Conditions for this.<o:p></o:p></span></p>

<p class=MsoPlainText style='margin-left:.5in;text-indent:-.25in;mso-list:l0 level1 lfo2;
tab-stops:list .5in'><![if !supportLists]><span style='font-family:Symbol;
mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol'><span
style='mso-list:Ignore'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span style='font-family:Verdana'><o:p>&nbsp;</o:p></span></p>

<p class=MsoPlainText><span style='font-family:Verdana'><o:p>&nbsp;</o:p></span></p>

<p class=MsoPlainText><span style='font-family:Verdana'><o:p>&nbsp;</o:p></span></p>

<p class=MsoPlainText><span style='font-family:Verdana'><o:p>&nbsp;</o:p></span></p>

<h2>UN-RESOLVED PROBLEMS</h2>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoPlainText style='margin-left:.5in;text-indent:-.25in;mso-list:l0 level1 lfo2;
tab-stops:list .5in'><![if !supportLists]><span style='font-family:Symbol;
mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol'><span
style='mso-list:Ignore'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span style='font-family:Verdana'>How to support
debugging of mobile agents using VS.NET.<o:p></o:p></span></p>

<p class=MsoPlainText style='margin-left:.5in;text-indent:-.25in;mso-list:l0 level1 lfo2;
tab-stops:list .5in'><![if !supportLists]><span style='font-family:Symbol;
mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol'><span
style='mso-list:Ignore'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span style='font-family:Verdana'><o:p>&nbsp;</o:p></span></p>

<p class=MsoPlainText><span style='font-family:Verdana'><o:p>&nbsp;</o:p></span></p>

<p class=MsoPlainText><span style='font-family:Verdana'>2. <o:p></o:p></span></p>

</div>

</body>

</html>
